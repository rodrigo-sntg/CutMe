name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: api-cutme
          IMAGE_TAG: latest
        run: |
          docker buildx build --platform linux/amd64 -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Install Terraform
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget unzip
          wget -q https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip -O terraform.zip
          rm -rf terraform || true  # Remove qualquer bin√°rio existente
          unzip -o terraform.zip
          sudo mv terraform /usr/local/bin/
          rm -f terraform.zip

      - name: List Files
        run: ls -R

      - name: Terraform Init
        working-directory: terraform-infra/application
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform-infra/application
        env:
          REMOVIDO ${{ secrets.AWS_ACCESS_KEY_ID }}
          REMOVIDO ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_image_url: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/api-cutme:latest
        run: terraform apply -auto-approve
